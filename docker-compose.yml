services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mcp_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mcp_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mcp-server:
    build: .
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mcp_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_HOST: ${POSTGRES_HOST_DOCKER:-postgres}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama3.2}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL_DOCKER:-http://host.docker.internal:11434}
      FLASK_PORT: ${FLASK_PORT:-8000}
      FLASK_HOST: ${FLASK_HOST:-0.0.0.0}
      FLASK_DEBUG: ${FLASK_DEBUG:-true}
    ports:
      - "${FLASK_PORT:-8000}:${FLASK_PORT:-8000}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data:
